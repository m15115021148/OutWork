package com.sitemap.nanchang.activity;

import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.sitemap.nanchang.R;
import com.sitemap.nanchang.application.MyApplication;
import com.sitemap.nanchang.config.RequestCode;
import com.sitemap.nanchang.model.GpsModel;
import com.sitemap.nanchang.model.PatchModel;
import com.sitemap.nanchang.model.TaskPathModel;
import com.sitemap.nanchang.util.DateUtil;
import com.sitemap.nanchang.util.DialogUtil;
import com.sitemap.nanchang.util.FileNames;
import com.sitemap.nanchang.util.FileUtil;
import com.sitemap.nanchang.util.ParserUtil;
import com.sitemap.nanchang.util.ToastUtil;
import com.sitemap.nanchang.util.ZipUtils;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.ZipException;

/**
 * @desc 采集点新增页面
 * @author chenmeng created by 2016/12/9
 */
public class PatchDesActivity extends BaseActivity implements View.OnClickListener{
    private PatchDesActivity mContext;//本类
    private TextView mSubmit,reduce;//提交 压缩字体
    private LinearLayout mBack,mEdit;//返回 编辑
    private RelativeLayout mChar,mPicture,mVideo,mVoice;//文字布局 图片,视频
    private RelativeLayout mName,mNumber,mAddress,mCompany;//名称  编号 地点
    private View dailogView;//名称输入的viewdialog
    private TextView name,number,address,chars,company;//名称 编号 地点 文字
    private RelativeLayout mZip;//压缩 视图
    private TextView mZipDel;//删除压缩包
    private String zipPath = "";//压缩包 文件 路径
    private String zipFolderPath = "";//需要压缩的文件夹目录路径
    private int type = 1 ; //是否有压缩按钮
    private PatchModel taskModel;//实体类
    private TaskPathModel taskPathModel;//路径实体类
    private double lat,lng;
    private String gpsPath = "";
    private String numberPath = "";
    private String gatherName = "";//采集点 数据编号名称
    private List<File> mFileList = new ArrayList<>();//创建文件路径的集合
    private Location location;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_patch_des);
        mContext = this;
        initView();
        initData();
    }

    @Override
    public void onDestroy() {
        if(location!=null){
            location.stop();
        }
        super.onDestroy();
    }

    @Override
    public void onResume() {
        location=Location.instance();
        Log.i("TAG","gpsPath:"+gpsPath);
        location.setGpsPath(gpsPath);
        location.start(this);
        super.onResume();
    }

    /**
     * 初始化数据
     */
    private void initData() {
        type = getIntent().getIntExtra("type",1);
        if (type==1){
            mEdit.setVisibility(View.GONE);
        }else{
            mEdit.setVisibility(View.VISIBLE);
            taskModel = (PatchModel) getIntent().getSerializableExtra("PatchModel");
            taskPathModel = (TaskPathModel) getIntent().getSerializableExtra("TaskPathModel");
            if (taskModel!=null&&taskPathModel!=null){
                name.setText(taskModel.getName());
                address.setText(taskModel.getAddress());
                chars.setText(taskModel.getUploadText());
                zipFolderPath = taskPathModel.getSrcZipPath();
                zipPath = taskPathModel.getZipPath();
                if (taskPathModel.getIsZip().equals("1")){//已压缩
                    mEdit.setFocusable(false);
                    mEdit.setClickable(false);
                    reduce.setText("已压缩");
                    reduce.setTextColor(mContext.getResources().getColor(R.color.task_txt));
                    mZip.setVisibility(View.VISIBLE);
                }else{
                    mZip.setVisibility(View.GONE);
                }
                File appFilePath = FileUtil.createFolder(MyApplication.appRootPath);
                if (appFilePath.exists()){
                    File upLoadFile = FileUtil.createOneFolder(appFilePath, RequestCode.GATHER);
                    if (upLoadFile.exists()){//uuid
                        File userUuidFile = FileUtil.createOneFolder(upLoadFile, MyApplication.uuid);
                        if (userUuidFile.exists()){//创建task目录 多个
                            gatherName = taskPathModel.getProjectName();
                            File taskFile = FileUtil.createOneFolder(userUuidFile, gatherName);
                            if (taskFile.exists()) {
                                File gpsFile = FileUtil.createOneFolder(taskFile, RequestCode.GPS);
                                if (gpsFile.exists()){
                                    FileUtil.saveFilePath(gpsFile, RequestCode.GPSTXT, "",true);
                                    gpsPath=gpsFile.getPath();
                                }

                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * 初始化view
     */
    private void initView() {
        mBack = (LinearLayout) findViewById(R.id.task_back);
        mBack.setOnClickListener(this);
        mEdit = (LinearLayout) findViewById(R.id.task_edit);
        mEdit.setOnClickListener(this);
        mSubmit = (TextView) findViewById(R.id.task_submit);
        mSubmit.setOnClickListener(this);
        mChar = (RelativeLayout) findViewById(R.id.re_char);
        mChar.setOnClickListener(this);
        mPicture = (RelativeLayout) findViewById(R.id.re_picture);
        mPicture.setOnClickListener(this);
        mVideo = (RelativeLayout) findViewById(R.id.re_video);
        mVideo.setOnClickListener(this);
        mVoice = (RelativeLayout) findViewById(R.id.re_voice);
        mVoice.setOnClickListener(this);
        mName = (RelativeLayout) findViewById(R.id.re_name);
        mName.setOnClickListener(this);
        mNumber = (RelativeLayout) findViewById(R.id.re_number);
        mNumber.setOnClickListener(this);
        mAddress = (RelativeLayout) findViewById(R.id.re_address);
        mAddress.setOnClickListener(this);
        mCompany = (RelativeLayout) findViewById(R.id.re_company);
        mCompany.setOnClickListener(this);
        reduce = (TextView) findViewById(R.id.reduce);
        name = (TextView) findViewById(R.id.task_name);
        number = (TextView) findViewById(R.id.task_number);
        address = (TextView) findViewById(R.id.task_address);
        chars = (TextView) findViewById(R.id.task_char);
        company = (TextView) findViewById(R.id.task_company);
        mZip = (RelativeLayout) findViewById(R.id.re_zip);
        mZipDel = (TextView) findViewById(R.id.zip_del);
        mZipDel.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        if (v == mBack){
            if (type==1){
                onBackPressed();
            }else{
                mContext.finish();
            }
        }
        if (v == mEdit){//编辑(压缩)
            try{
                File appFilePath = FileUtil.createFolder(MyApplication.appRootPath);
                if (appFilePath.exists()){
                    File tempFile = FileUtil.createOneFolder(appFilePath, RequestCode.TEMP_GATHER);
                    File zipFile = new File(zipFolderPath);
                    if (tempFile.exists()){
                        FileNames names = new FileNames();
                        String zip = "";
                        File[] files = zipFile.listFiles();
                        for (File file:files) {
                            if (file.getName().equals(gatherName)){
                                zip =  file.getPath();
                            }
                        }
                        if (TextUtils.isEmpty(zip)){
                            ToastUtil.showBottomShort(mContext,"压缩文件不存在");
                            return;
                        }
                        ZipUtils.zip(zip,tempFile.getPath(),names.getZipGatherName(gatherName),MyApplication.uuid);
                        zipPath = tempFile.getPath()+"/"+names.getZipGatherName(gatherName);
                        mZip.setVisibility(View.VISIBLE);
                        mEdit.setFocusable(false);
                        mEdit.setClickable(false);
                        reduce.setText("已压缩");
                        reduce.setTextColor(mContext.getResources().getColor(R.color.task_txt));
                        ToastUtil.showBottomShort(mContext,"压缩成功");
                        mEdit.setClickable(false);
                        mEdit.setFocusable(false);
                    }
                }
            } catch (ZipException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        if (v == mSubmit){//提交
            if (TextUtils.isEmpty(name.getText().toString())){
                ToastUtil.showBottomShort(mContext,"采集名称不能为空");
                return;
            }
            if (TextUtils.isEmpty(address.getText().toString())){
                ToastUtil.showBottomShort(mContext,"采集地点不能为空");
                return;
            }
//            if (TextUtils.isEmpty(address.getText().toString())){
//                ToastUtil.showBottomShort(mContext,"任务地点不能为空");
//                return;
//            }
//            if (TextUtils.isEmpty(company.getText().toString())){
//                ToastUtil.showBottomShort(mContext,"任务单位不能为空");
//                return;
//            }
            if (TextUtils.isEmpty(chars.getText().toString())) {
                ToastUtil.showBottomShort(mContext, "采集说明不能为空");
                return;
            }
            if (mFileList==null||mFileList.size()<=0){
                mFileList = createFolder();
            }
            if(mFileList.get(0).exists()){
                FileUtil.saveFilePath(mFileList.get(0), RequestCode.GATHERNAME, ParserUtil.objectToJson(buildData()),false);
                GpsModel gpsModel=new GpsModel();
                gpsModel.setLat(String.valueOf(lat));
                gpsModel.setLng(String.valueOf(lng));
                gpsModel.setTime(DateUtil.getCurrentDate());
                FileUtil.saveFilePath(mFileList.get(0), RequestCode.TASKDES, ParserUtil.objectToJson(gpsModel),false);
            }
            finish();
        }
        if(v == mChar){//文字
            if (TextUtils.isEmpty(address.getText().toString().trim())||TextUtils.isEmpty(name.getText().toString().trim())
                    ){
                ToastUtil.showBottomShort(mContext,"请先输入基本信息");
                return;
            }
            Intent intent = new Intent(mContext,CharDetailActivity.class);
            intent.putExtra("chars",chars.getText().toString());
            startActivityForResult(intent,RequestCode.CHARS);
        }
        if (v == mPicture){//图片
            if (TextUtils.isEmpty(address.getText().toString().trim())||TextUtils.isEmpty(name.getText().toString().trim())
                    ){
                ToastUtil.showBottomShort(mContext,"请先输入基本信息");
                return;
            }
            if (mFileList==null||mFileList.size()<=0){
                mFileList = createFolder();
            }
            Intent intent = new Intent(mContext,ImageSelectActivity.class);
            intent.putExtra("imgPath",mFileList.get(1).getPath());
            startActivity(intent);
        }
        if(v == mVoice){//音频
            if (TextUtils.isEmpty(address.getText().toString().trim())||TextUtils.isEmpty(name.getText().toString().trim())
                    ){
                ToastUtil.showBottomShort(mContext,"请先输入基本信息");
                return;
            }
            if (mFileList==null||mFileList.size()<=0){
                mFileList = createFolder();
            }
            Intent intent = new Intent(mContext,VoiceSelectActivity.class);
            intent.putExtra("voicePath",mFileList.get(3).getPath());
            startActivity(intent);
        }
        if (v == mVideo){//视频
            if (TextUtils.isEmpty(address.getText().toString().trim())||TextUtils.isEmpty(name.getText().toString().trim())
                    ){
                ToastUtil.showBottomShort(mContext,"请先输入基本信息");
                return;
            }
            if (mFileList==null||mFileList.size()<=0){
                mFileList = createFolder();
            }
            Intent intent = new Intent(mContext,VideoSelectActivity.class);
            intent.putExtra("videoPath",mFileList.get(2).getPath());
            startActivity(intent);
        }
        if (v == mName){//名称
            dailogView = DialogUtil.customInputDialog(mContext, "确定", "取消",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            EditText text = (EditText) dailogView.findViewById(R.id.dialog_et_txt);
                            name.setText(text.getText().toString());
                        }
                    },
                    null);
        }
        if (v == mAddress){//地点
            dailogView = DialogUtil.customInputDialog(mContext, "确定", "取消",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            EditText text = (EditText) dailogView.findViewById(R.id.dialog_et_txt);
                            address.setText(text.getText().toString());
                        }
                    },
                    null);
        }
        if (v == mCompany){
            dailogView = DialogUtil.customInputDialog(mContext, "确定", "取消",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            EditText text = (EditText) dailogView.findViewById(R.id.dialog_et_txt);
                            company.setText(text.getText().toString());
                        }
                    },
                    null);
        }
        if (v == mZipDel){//删除压缩包
            mZip.setVisibility(View.GONE);
            Log.e("result","delete _zipPath:"+zipPath);
            File file = new File(zipPath);
            file.delete();
            mEdit.setFocusable(true);
            mEdit.setClickable(true);
            reduce.setText("压缩");
            reduce.setTextColor(mContext.getResources().getColor(R.color.title_back_color));
            ToastUtil.showBottomShort(mContext,"删除成功");
            mZip.setClickable(false);
            mZip.setFocusable(false);
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (resultCode){
            case RequestCode.CHARS:
                chars.setText(data.getStringExtra("chars"));
                break;
        }
    }

    /**
     * 0 文本
     * 1 图片
     * 2 视频
     * 创建文件目录
     */
    private List<File> createFolder(){
        File appFilePath = FileUtil.createFolder(MyApplication.appRootPath);//创建根目录
        if (appFilePath.exists()){
            File upLoadFile = FileUtil.createOneFolder(appFilePath, RequestCode.GATHER);
            if (upLoadFile.exists()){//uuid
                File userUuidFile = FileUtil.createOneFolder(upLoadFile, MyApplication.uuid);
                if (userUuidFile.exists()){
                    FileNames names = new FileNames();
                    File numberFile = FileUtil.createOneFolder(userUuidFile, names.getGatherName());
                    numberPath = numberFile.getPath();
                    if (numberFile.exists()){
                        //创建text img video 目录
                        File textFile = FileUtil.createOneFolder(numberFile, RequestCode.TEXT);
                        File imgFile = FileUtil.createOneFolder(numberFile, RequestCode.IMG);
                        File videoFile = FileUtil.createOneFolder(numberFile, RequestCode.VIDEO);
                        File voiceFile = FileUtil.createOneFolder(numberFile, RequestCode.VOICE);
                        mFileList.add(textFile);
                        mFileList.add(imgFile);
                        mFileList.add(videoFile);
                        mFileList.add(voiceFile);
                    }
                }
            }
        }
        return mFileList;
    }

    /**
     * 实体类赋值
     * @return
     */
    private PatchModel buildData(){
        PatchModel model = new PatchModel();
        model.setUuid(MyApplication.uuid);
        model.setName(name.getText().toString());
        model.setAddress(address.getText().toString());
        model.setUploadText(chars.getText().toString());
        model.setLat(String.valueOf(lat));
        model.setLng(String.valueOf(lng));
        model.setTime(DateUtil.getCurrentDate());
        return model;
    }

    @Override
    public void onBackPressed() {
        if (type==1){
            View viewDialog = DialogUtil.customPromptDialog(mContext, "放弃", "不放弃",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            if (!TextUtils.isEmpty(numberPath)){
                                FileUtil.deleteFolder(new File(numberPath));
                            }
                            mContext.finish();
                        }
                    }, null);
            TextView tv = (TextView) viewDialog.findViewById(R.id.dialog_tv_txt);
            tv.setText("是否放弃新建采集点吗?");
        }else{
            super.onBackPressed();
        }
    }
}
