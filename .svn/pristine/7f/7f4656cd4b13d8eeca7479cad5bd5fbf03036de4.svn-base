package com.sitemap.nanchang.activity;

import android.app.Activity;
import android.content.Context;
import android.util.Log;

import com.baidu.location.BDLocation;
import com.baidu.location.BDLocationListener;
import com.baidu.location.LocationClient;
import com.baidu.location.LocationClientOption;
import com.sitemap.nanchang.config.RequestCode;
import com.sitemap.nanchang.model.GpsModel;
import com.sitemap.nanchang.util.DateUtil;
import com.sitemap.nanchang.util.FileUtil;
import com.sitemap.nanchang.util.ParserUtil;

import java.io.File;

/**
 * Created by Administrator on 2016/12/8.
 */

public class Location {
    private static Location _instance;
    public LocationClient mLocationClient = null;
    public BDLocationListener myListener ;
    private double lat,lng;
    private String gpsPath="";
    private Context context;

    public Context getContext() {
        return context;
    }

    public void setContext(Context context) {
        this.context = context;
    }

    public String getGpsPath() {
        return gpsPath;
    }

    public void setGpsPath(String gpsPath) {
        this.gpsPath = gpsPath;
    }

    public double getLat() {
        return lat;
    }

    public void setLat(double lat) {
        this.lat = lat;
    }

    public double getLng() {
        return lng;
    }

    public void setLng(double lng) {
        this.lng = lng;
    }

    public Location(){
        myListener=new MyLocationListener();
    }

    public static Location instance() {
        if (_instance != null) {
            return _instance;
        } else {
            return new Location();
        }
    }

    /**
     * 定位监听器
     */
    public class MyLocationListener implements BDLocationListener {

        @Override
        public void onReceiveLocation(BDLocation location) {
            lat=location.getLatitude();
            lng=location.getLongitude();
            Log.i("TAG", "正在定位");
            Log.i("TAG", "lat:"+lat);
            Log.i("TAG", "lng:"+lng);
            GpsModel gpsModel=new GpsModel();
            gpsModel.setLat(String.valueOf(lat));
            gpsModel.setLng(String.valueOf(lng));
            gpsModel.setTime(DateUtil.getCurrentDate());
            if(!gpsPath.equals("")&&lat!=4.9E-324&&lat!=0&lng!=0){
                File gpsFile=new File(gpsPath);
                FileUtil.saveFilePath(gpsFile, RequestCode.GPSTXT, ParserUtil.objectToJson(gpsModel)+"\r\n",true);
            }

            StringBuffer sb = new StringBuffer(256);
            sb.append("time : ");
            sb.append(location.getTime());
            sb.append("\nerror code : ");
            sb.append(location.getLocType());
            sb.append("\nlatitude : ");
            sb.append(location.getLatitude());
            sb.append("\nlontitude : ");
            sb.append(location.getLongitude());
            sb.append("\nradius : ");
            sb.append(location.getRadius());
            if (location.getLocType() == BDLocation.TypeGpsLocation) {// GPS定位结果
                sb.append("\nspeed : ");
                sb.append(location.getSpeed());// 单位：公里每小时
                sb.append("\nsatellite : ");
                sb.append(location.getSatelliteNumber());
                sb.append("\nheight : ");
                sb.append(location.getAltitude());// 单位：米
                sb.append("\ndirection : ");
                sb.append(location.getDirection());// 单位度
                sb.append("\naddr : ");
                sb.append(location.getAddrStr());
                sb.append("\ndescribe : ");
                sb.append("gps定位成功");

            } else if (location.getLocType() == BDLocation.TypeNetWorkLocation) {// 网络定位结果
                sb.append("\naddr : ");
                sb.append(location.getAddrStr());
                // 运营商信息
                sb.append("\noperationers : ");
                sb.append(location.getOperators());
                sb.append("\ndescribe : ");
                sb.append("网络定位成功");
            } else if (location.getLocType() == BDLocation.TypeOffLineLocation) {// 离线定位结果
                sb.append("\ndescribe : ");
                sb.append("离线定位成功，离线定位结果也是有效的");
            } else if (location.getLocType() == BDLocation.TypeServerError) {
                sb.append("\ndescribe : ");
                sb.append("服务端网络定位失败，可以反馈IMEI号和大体定位时间到loc-bugs@baidu.com，会有人追查原因");
            } else if (location.getLocType() == BDLocation.TypeNetWorkException) {
                sb.append("\ndescribe : ");
                sb.append("网络不同导致定位失败，请检查网络是否通畅");
            } else if (location.getLocType() == BDLocation.TypeCriteriaException) {
                sb.append("\ndescribe : ");
                sb.append("无法获取有效定位依据导致定位失败，一般是由于手机的原因，处于飞行模式下一般会造成这种结果，可以试着重启手机");
            }

        }

    }

    /**
     * 配置定位sdk的参数
     */
    public void initLocation() {

        LocationClientOption option = new LocationClientOption();

        option.setCoorType("gcj02");// 返回的定位结果是百度经纬度，默认值gcj02
        mLocationClient = new LocationClient(context);
        Log.i("TAG","context:"+context.toString());
        mLocationClient.registerLocationListener(myListener);
        option.setOpenGps(true);// 打开gps
        option.setAddrType("all");// 返回的定位结果包含地址信息
        // option.disableCache(false);// 禁止启用缓存定位
        // option.setPriority(LocationClientOption.GpsFirst);
        option.setScanSpan(1000 * 30);
        option.setLocationMode(LocationClientOption.LocationMode.Hight_Accuracy);// 设置定位模式
        mLocationClient.setLocOption(option);
        mLocationClient.start();

        Log.i("TAG", "GPS定位开启");
    }
}
