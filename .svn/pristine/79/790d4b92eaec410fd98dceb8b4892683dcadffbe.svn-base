package com.sitemap.nanchang.activity;

import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.sitemap.nanchang.R;
import com.sitemap.nanchang.application.MyApplication;
import com.sitemap.nanchang.config.RequestCode;
import com.sitemap.nanchang.model.GpsModel;
import com.sitemap.nanchang.model.TaskModel;
import com.sitemap.nanchang.model.TaskPathModel;
import com.sitemap.nanchang.util.DateUtil;
import com.sitemap.nanchang.util.DialogUtil;
import com.sitemap.nanchang.util.FileNames;
import com.sitemap.nanchang.util.FileUtil;
import com.sitemap.nanchang.util.JsonUtil;
import com.sitemap.nanchang.util.ParserUtil;
import com.sitemap.nanchang.util.ToastUtil;
import com.sitemap.nanchang.util.ZipUtils;
import com.sitemap.nanchang.view.MyProgressDialog;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

/**
 * @desc 任务详情
 * @author chenmeng created by 2016/11/30
 */
public class TaskDescActivity extends BaseActivity implements View.OnClickListener,ZipUtils.ZipOverCallBack{
    private TaskDescActivity mContext;//本类
    private TextView mSubmit,reduce;//提交 压缩字体
    private LinearLayout mBack;//返回
    private RelativeLayout mEdit;//编辑
    private RelativeLayout mChar,mPicture,mVideo,mVoice;//文字布局 图片,视频
    private RelativeLayout mName,mNumber,mAddress,mCompany;//名称  编号 地点
    private View dailogView;//名称输入的viewdialog
    private View dailog;//提示框
    private TextView name,number,address,chars,company;//名称 编号 地点 文字
    private RelativeLayout mZip;//压缩 视图
    private TextView mZipDel;//删除压缩包
    private String zipPath = "";//压缩包 文件 路径
    private String zipFolderPath = "";//需要压缩的文件夹目录路径
    private int type = 1 ; //是否有压缩按钮
    private TaskModel taskModel;//实体类
    private TaskPathModel taskPathModel;//路径实体类
    private String numberPath = "";//创建的编号文件夹 路径
    private double lat,lng;
    private String gpsPath="";
    private boolean isChangeNumber = false;//是否输入过编号 一旦输入不能更改
    private int numberCode = 0;//编号存在的数量
    private Location location;
    private String fileName;//文件夹的名称 number_时间
//    private MyProgresBar pb;
    private ZipUtils zipUtils;
    private MyProgressDialog progressDialog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_task_desc);
        mContext = this;
        initView();
        initData();
    }
    @Override
    public void onDestroy() {
        if(location!=null){
            location.stop();
        }
        super.onDestroy();
    }

    @Override
    public void onResume() {
        location=Location.instance();
        Log.i("TAG","gpsPath:"+gpsPath);
        location.setGpsPath(gpsPath);
        location.start(this);
        super.onResume();
    }

    /**
     * 初始化数据
     */
    private void initData() {
        type = getIntent().getIntExtra("type",1);
        if (type==1){
            isChangeNumber = false;
            mEdit.setVisibility(View.GONE);
        }else{
            isChangeNumber = true;//编号无法修改
            mEdit.setVisibility(View.VISIBLE);
            taskModel = (TaskModel) getIntent().getSerializableExtra("TaskModel");
            taskPathModel = (TaskPathModel) getIntent().getSerializableExtra("TaskPathModel");
            if (taskModel!=null&&taskPathModel!=null){
                name.setText(taskModel.getTaskName());
                number.setText(taskModel.getTaskNumber());
                address.setText(taskModel.getAddress());
                company.setText(taskModel.getCompany());
                chars.setText(taskModel.getUploadText());
                zipFolderPath = taskPathModel.getSrcZipPath();
                zipPath = taskPathModel.getZipPath();
                fileName = taskPathModel.getProjectName();
                if (taskPathModel.getIsZip().equals("1")){//已压缩
                    mEdit.setFocusable(false);
                    mEdit.setClickable(false);
                    reduce.setText("已压缩");
                    reduce.setTextColor(mContext.getResources().getColor(R.color.task_txt));
                    mZip.setVisibility(View.VISIBLE);
                }else{
                    mZip.setVisibility(View.GONE);
                }
                File appFilePath = FileUtil.createFolder(MyApplication.appRootPath);
                if (appFilePath.exists()){
                    File upLoadFile = FileUtil.createOneFolder(appFilePath, RequestCode.UPLOAD);
                    if (upLoadFile.exists()){//uuid
                        File userUuidFile = FileUtil.createOneFolder(upLoadFile, MyApplication.uuid);
                        if (userUuidFile.exists()){//创建task目录 多个
                            File tastFile = FileUtil.createOneFolder(userUuidFile, taskModel.getTaskNumber());
                            if (tastFile.exists()) {
                                File gpsFile = FileUtil.createOneFolder(tastFile, RequestCode.GPS);
                                if (gpsFile.exists()){
                                    FileUtil.saveFilePath(gpsFile, RequestCode.GPSTXT, "",true);
                                    gpsPath=gpsFile.getPath();
                                }

                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * 初始化view
     */
    private void initView() {
        mBack = (LinearLayout) findViewById(R.id.task_back);
        mBack.setOnClickListener(this);
        mEdit = (RelativeLayout) findViewById(R.id.task_edit);
        mEdit.setOnClickListener(this);
        mSubmit = (TextView) findViewById(R.id.task_submit);
        mSubmit.setOnClickListener(this);
        mChar = (RelativeLayout) findViewById(R.id.re_char);
        mChar.setOnClickListener(this);
        mPicture = (RelativeLayout) findViewById(R.id.re_picture);
        mPicture.setOnClickListener(this);
        mVideo = (RelativeLayout) findViewById(R.id.re_video);
        mVideo.setOnClickListener(this);
        mVoice = (RelativeLayout) findViewById(R.id.re_voice);
        mVoice.setOnClickListener(this);
        mName = (RelativeLayout) findViewById(R.id.re_name);
        mName.setOnClickListener(this);
        mNumber = (RelativeLayout) findViewById(R.id.re_number);
        mNumber.setOnClickListener(this);
        mAddress = (RelativeLayout) findViewById(R.id.re_address);
        mAddress.setOnClickListener(this);
        mCompany = (RelativeLayout) findViewById(R.id.re_company);
        mCompany.setOnClickListener(this);
        reduce = (TextView) findViewById(R.id.reduce);
        name = (TextView) findViewById(R.id.task_name);
        number = (TextView) findViewById(R.id.task_number);
        address = (TextView) findViewById(R.id.task_address);
        chars = (TextView) findViewById(R.id.task_char);
        company = (TextView) findViewById(R.id.task_company);
        mZip = (RelativeLayout) findViewById(R.id.re_zip);
        mZipDel = (TextView) findViewById(R.id.zip_del);
        mZipDel.setOnClickListener(this);
//        pb = (MyProgresBar) findViewById(R.id.progressBar);
    }

    @Override
    public void onClick(View v) {
        if (v == mBack){
            if (type==1){
                onBackPressed();
            }else{
                mContext.finish();
            }
        }
        if (v == mEdit) {//(压缩)
//            reduce.setText("压缩中");
//            reduce.setVisibility(View.GONE);
            progressDialog = MyProgressDialog.createDialog(this);
            zipUtils = new ZipUtils();
//            ProgressDialog dialog=new ProgressDialog(this, AlertDialog.THEME_HOLO_LIGHT);
//            dialog.setMessage("压缩中，请稍候...");
//            dialog.setTitle("压缩文件");
//            dialog.setCanceledOnTouchOutside(false);
//            dialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
//            dialog.show();
            try {
                File appFilePath = FileUtil.createFolder(MyApplication.appRootPath);
                if (appFilePath.exists()) {
                    File tempFile = FileUtil.createOneFolder(appFilePath, RequestCode.TEMP_TASK);
                    File zipFile = new File(zipFolderPath);
                    if (tempFile.exists()) {
                        String zip = "";
                        FileNames names = new FileNames();
                        File[] files = zipFile.listFiles();
                        for (File file : files) {
                            if (file.getName().equals(taskModel.getTaskNumber())) {
                                zip = file.getPath();
                            }
                        }
                        if (TextUtils.isEmpty(zip)) {
                            ToastUtil.showBottomShort(mContext, "压缩文件不存在");
                            return;
                        }
                        zipUtils.setCallBack(mContext);
                        String path = zipUtils.zip(zip, tempFile.getPath(), names.getZipTaskName(fileName), MyApplication.uuid);
                        zipPath = path;
                    }
                }
            }catch (Exception e){
                e.printStackTrace();
            }

        }
        if (v == mSubmit){//提交
            if (TextUtils.isEmpty(name.getText().toString())){
                ToastUtil.showBottomShort(mContext,"任务名称不能为空");
                return;
            }
            if (TextUtils.isEmpty(number.getText().toString())){
                ToastUtil.showBottomShort(mContext,"任务编号不能为空");
                return;
            }
//            if (TextUtils.isEmpty(address.getText().toString())){
//                ToastUtil.showBottomShort(mContext,"任务地点不能为空");
//                return;
//            }
//            if (TextUtils.isEmpty(company.getText().toString())){
//                ToastUtil.showBottomShort(mContext,"任务单位不能为空");
//                return;
//            }
            if (TextUtils.isEmpty(chars.getText().toString())){
                ToastUtil.showBottomShort(mContext,"任务说明不能为空");
                return;
            }
            String str = (number.getText().toString().equals(""))?"number":number.getText().toString();
            List<File> list = createFolder(str,1);
            if(list.get(0).exists()){
                FileUtil.saveFilePath(list.get(0), RequestCode.TASKNAME, JsonUtil.buildJsonData(buildData()),false);
                GpsModel gpsModel=new GpsModel();
                gpsModel.setLat(String.valueOf(lat));
                gpsModel.setLng(String.valueOf(lng));
                gpsModel.setTime(DateUtil.getCurrentDate());
                gpsModel.setDes("");
                FileUtil.saveFilePath(list.get(0), RequestCode.TASKDES, ParserUtil.objectToJson(gpsModel),false);
            }
            finish();
        }
        if(v == mChar){//文字
            if (TextUtils.isEmpty(number.getText().toString().trim())||TextUtils.isEmpty(name.getText().toString().trim())
                    ){
                ToastUtil.showBottomShort(mContext,"请先输入基本信息");
                return;
            }
            Intent intent = new Intent(mContext,CharDetailActivity.class);
            intent.putExtra("chars",chars.getText().toString());
            startActivityForResult(intent,RequestCode.CHARS);
        }
        if (v == mPicture){//图片
            if (TextUtils.isEmpty(number.getText().toString().trim())||TextUtils.isEmpty(name.getText().toString().trim())
                    ){
                ToastUtil.showBottomShort(mContext,"请先输入基本信息");
                return;
            }
            String str = (number.getText().toString().equals(""))?"number":number.getText().toString();
            List<File> list = createFolder(str,2);
            Intent intent = new Intent(mContext,ImageSelectActivity.class);
            intent.putExtra("imgPath",list.get(1).getPath());
            startActivity(intent);
        }
        if(v == mVoice){//音频
            if (TextUtils.isEmpty(number.getText().toString().trim())||TextUtils.isEmpty(name.getText().toString().trim())
                    ){
                ToastUtil.showBottomShort(mContext,"请先输入基本信息");
                return;
            }
            String str = (number.getText().toString().equals(""))?"number":number.getText().toString();
            List<File> list = createFolder(str,2);
            Intent intent = new Intent(mContext,VoiceSelectActivity.class);
            intent.putExtra("voicePath",list.get(3).getPath());
            startActivity(intent);
        }
        if (v == mVideo){//视频
            if (TextUtils.isEmpty(number.getText().toString().trim())||TextUtils.isEmpty(name.getText().toString().trim())
                    ){
                ToastUtil.showBottomShort(mContext,"请先输入基本信息");
                return;
            }
            String str = (number.getText().toString().equals(""))?"number":number.getText().toString();
            List<File> list = createFolder(str,2);
            Intent intent = new Intent(mContext,VideoSelectActivity.class);
            intent.putExtra("videoPath",list.get(2).getPath());
            startActivity(intent);
        }
        if (v == mName){//名称
            dailogView = DialogUtil.customInputDialog(mContext, "确定", "取消",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            EditText text = (EditText) dailogView.findViewById(R.id.dialog_et_txt);
                            name.setText(text.getText().toString());
                        }
                    },
                    null);
        }
        if (v == mNumber){//编号
            if (isChangeNumber || type==2){
                ToastUtil.showBottomShort(mContext,"编号已确定,无法再次修改");
                return;
            }
            dailogView = DialogUtil.customInputDialog(mContext, "确定", "取消",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            final EditText et = (EditText) dailogView.findViewById(R.id.dialog_et_txt);
                            if (TextUtils.isEmpty(et.getText().toString().trim())){
                                ToastUtil.showBottomShort(mContext,"任务编号不能为空");
                                return;
                            }
                            dailog = DialogUtil.customPromptDialog(mContext, "确定", "取消",
                                    new DialogInterface.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialog, int which) {
                                            if (MyApplication.numberSum!=null&&MyApplication.numberSum.length>0){
                                                for (String string : MyApplication.numberSum){
                                                    if (et.getText().toString().trim().equals(string)){
                                                        numberCode += 1;
                                                    }
                                                }
                                            }
                                            if (numberCode>0){
                                                ToastUtil.showBottomShort(mContext,"编号已存在");
                                                numberCode = 0;
                                            }else{
                                                number.setText(et.getText().toString());
                                                isChangeNumber = true;
                                            }

                                        }
                                    },
                                    null);
                            TextView text = (TextView) dailog.findViewById(R.id.dialog_tv_txt);
                            text.setText("编号("+et.getText().toString()+")确定后,无法再次修改");
                        }
                    },
                    null);
        }
        if (v == mAddress){//地点
            dailogView = DialogUtil.customInputDialog(mContext, "确定", "取消",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            EditText text = (EditText) dailogView.findViewById(R.id.dialog_et_txt);
                            address.setText(text.getText().toString());
                        }
                    },
                    null);
        }
        if (v == mCompany){
            dailogView = DialogUtil.customInputDialog(mContext, "确定", "取消",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            EditText text = (EditText) dailogView.findViewById(R.id.dialog_et_txt);
                            company.setText(text.getText().toString());
                        }
                    },
                    null);
        }
        if (v == mZipDel){//删除压缩包
            View viewDialog = DialogUtil.customPromptDialog(mContext, "确定", "取消",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            mZip.setVisibility(View.GONE);
                            Log.e("result","delete _zipPath:"+zipPath);
                            File file = new File(zipPath);
                            file.delete();
                            mEdit.setFocusable(true);
                            mEdit.setClickable(true);
                            reduce.setText("压缩");
                            reduce.setTextColor(mContext.getResources().getColor(R.color.title_back_color));
                            ToastUtil.showBottomShort(mContext,"删除成功");
                            mZip.setClickable(false);
                            mZip.setFocusable(false);
                        }
                    }, null);
            TextView tv = (TextView) viewDialog.findViewById(R.id.dialog_tv_txt);
            tv.setText("确定要删除吗？");
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (resultCode){
            case RequestCode.CHARS:
                chars.setText(data.getStringExtra("chars"));
                break;
        }
    }

    /**
     * 0 文本
     * 1 图片
     * 2 视频
     * 创建文件目录
     */
    private List<File> createFolder(String numberName,int type){
        List<File> mListFile = new ArrayList<>();//保存文字 图片 视频 目录 集合
        File appFilePath = FileUtil.createFolder(MyApplication.appRootPath);//创建根目录
        if (appFilePath.exists()){
            File upLoadFile = FileUtil.createOneFolder(appFilePath, RequestCode.UPLOAD);
            if (upLoadFile.exists()){//uuid
                File userUuidFile = FileUtil.createOneFolder(upLoadFile, MyApplication.uuid);
                if (userUuidFile.exists()){
                    File numberFile = FileUtil.createOneFolder(userUuidFile, numberName);
                    numberPath = numberFile.getPath();
                    if (type==1){
                        File[] files = userUuidFile.listFiles();
                        for (File file:files){
                            if (file.getName().equals("number")){
                                FileUtil.deleteFolder(new File(userUuidFile.getPath(),file.getName()));
                            }
                        }
//                        File[] files = userUuidFile.listFiles();
//                        for (File file:files){
//                            if (MyApplication.numberSum!=null&&MyApplication.numberSum.length>0){
//                                for (String name:MyApplication.numberSum){
//                                    if (!name.equals(file.getName())){
//                                        if (!file.getName().equals(number.getText().toString().trim())){
//                                            FileUtil.deleteFolder(new File(userUuidFile.getPath(),file.getName()));
//                                        }
//                                    }
//                                }
//                            }else{
//                                if (!file.getName().equals(number.getText().toString().trim())){
//                                    FileUtil.deleteFolder(new File(userUuidFile.getPath(),file.getName()));
//                                }
//                            }
//
//                        }
                    }
                    if (numberFile.exists()){
                        //创建text img video 目录
                        File textFile = FileUtil.createOneFolder(numberFile, RequestCode.TEXT);
                        File imgFile = FileUtil.createOneFolder(numberFile, RequestCode.IMG);
                        File videoFile = FileUtil.createOneFolder(numberFile, RequestCode.VIDEO);
                        File voiceFile = FileUtil.createOneFolder(numberFile, RequestCode.VOICE);
                        mListFile.add(textFile);
                        mListFile.add(imgFile);
                        mListFile.add(videoFile);
                        mListFile.add(voiceFile);
                    }
                }
            }
        }
        return mListFile;
    }

    /**
     * 实体类赋值
     * @return
     */
    private TaskModel buildData(){
        TaskModel model = new TaskModel();
        lat = location.getLocation()[1];
        lng = location.getLocation()[0];
        model.setUuid(MyApplication.uuid);
        model.setTaskName(name.getText().toString());
        model.setTaskNumber(number.getText().toString());
        model.setAddress(address.getText().toString());
        model.setCompany(company.getText().toString());
        model.setUploadText(chars.getText().toString());
        model.setTime(DateUtil.getCurrentDate());
        return model;
    }

    @Override
    public void onBackPressed() {
        if (type==1){
            View viewDialog = DialogUtil.customPromptDialog(mContext, "放弃", "不放弃",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            if (!TextUtils.isEmpty(numberPath)){
                                FileUtil.deleteFolder(new File(numberPath));
                            }
                            mContext.finish();
                        }
                    }, null);
            TextView tv = (TextView) viewDialog.findViewById(R.id.dialog_tv_txt);
            tv.setText("是否放弃新建任务吗?");
        }else{
            super.onBackPressed();
        }
    }

    @Override
    public void onZipStart() {
        progressDialog.setMessage("加载中...");
        progressDialog.show();
    }

        @Override
    public void onZipOver() {
        progressDialog.dismiss();
//        reduce.setVisibility(View.VISIBLE);
        mZip.setVisibility(View.VISIBLE);
        mEdit.setFocusable(false);
        mEdit.setClickable(false);
        reduce.setText("已压缩");
        reduce.setTextColor(mContext.getResources().getColor(R.color.task_txt));
        ToastUtil.showBottomShort(mContext,"压缩成功");
        mEdit.setClickable(false);
        mEdit.setFocusable(false);
    }
}
