package com.sitemap.nanchang.activity;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Environment;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;

import com.sitemap.nanchang.R;
import com.sitemap.nanchang.application.MyApplication;
import com.sitemap.nanchang.config.RequestCode;
import com.sitemap.nanchang.model.PersonModel;
import com.sitemap.nanchang.util.DialogUtil;
import com.sitemap.nanchang.util.FileUtil;
import com.sitemap.nanchang.util.ParserUtil;
import com.sitemap.nanchang.util.ToastUtil;
import com.sitemap.nanchang.view.CallbackBundle;
import com.sitemap.nanchang.view.OpenFileDialog;

import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LoginActivity extends BaseActivity implements View.OnClickListener {
    private LoginActivity mContext;
    private EditText zhanghao, mima;
    private CheckBox savePwd;
    private TextView login;
    private String persons;
    private List<PersonModel> lPerson = new ArrayList<PersonModel>();
    private boolean isSub = false;
    static private int openfileDialogId = 0;
    private TextView path;//选择的路径
    private SharedPreferences preferences;//存储
    private OpenFileDialog openFileDialog;//文件选择

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        init();
    }

    private void init() {
        mContext = this;
        zhanghao = (EditText) findViewById(R.id.zhanghao);
        mima = (EditText) findViewById(R.id.mima);
        savePwd = (CheckBox) findViewById(R.id.savePwd);
        //去除记住密码
        savePwd.setVisibility(View.GONE);
        savePwd.setChecked(false);
        login = (TextView) findViewById(R.id.login);
        login.setOnClickListener(this);
        openFileDialog = new OpenFileDialog(this);
        preferences = mContext.getSharedPreferences("user", Context.MODE_PRIVATE);
//        if (preferences.getBoolean("save", false)) {
//            if (preferences.getString("username", "") != null && !preferences.getString("username", "").equals("")) {
//                zhanghao.setText(preferences.getString("username", ""));
//                if (preferences.getString("pwd", "") != null) {
//                    mima.setText(preferences.getString("pwd", ""));
//                }
//            }
//            savePwd.setChecked(true);
//        } else {
//            if (preferences.getString("username", "") != null && !preferences.getString("username", "").equals("")) {
//                zhanghao.setText(preferences.getString("username", ""));
//            }
//            savePwd.setChecked(false);
//        }
        if (preferences.getBoolean("first",true)){
            SharedPreferences.Editor editor = preferences.edit();
            editor.putString("username","ch");
            editor.putString("pwd","123");
            editor.commit();
        }

        if (!TextUtils.isEmpty(preferences.getString("username", ""))) {
            zhanghao.setText(preferences.getString("username", ""));
        }
        MyApplication.verifyStoragePermissions(LoginActivity.this);
    }

    @Override
    public void onClick(View v) {
        if (v == login) {
            if (TextUtils.isEmpty(zhanghao.getText().toString().trim())) {
                ToastUtil.showBottomShort(this, "账号不能为空！");
                return;
            }
            if (TextUtils.isEmpty(mima.getText().toString())) {
                ToastUtil.showBottomShort(this, "密码不能为空！");
                return;
            }
            if (checkPsw()) {
                if (preferences.getBoolean("first", true)) {
                    final AlertDialog.Builder buidler = new AlertDialog.Builder(this);
                    View view = LayoutInflater.from(this).inflate(
                            R.layout.address_dialog, null);
                    TextView wenjianjia=(TextView) view.findViewById(R.id.wenjianjia);
                    TextView sure=(TextView) view.findViewById(R.id.sure);
                    path=(TextView) view.findViewById(R.id.path);
                    path.setText(Environment.getExternalStorageDirectory().toString());
                    wenjianjia.setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            showDialog(openfileDialogId);
                        }
                    });
                    buidler.setView(view);
                    buidler.setCancelable(false);
                    final AlertDialog aDialog=buidler.create();
                    sure.setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            MyApplication.appSelPath= path.getText().toString().trim();
                            MyApplication.appRootPath = MyApplication.appSelPath + "/"+ RequestCode.APPNAME;
                            SharedPreferences.Editor editor = preferences.edit();
                            editor.putBoolean("first", false);
                            editor.putString("path",MyApplication.appRootPath);
                            editor.commit();
                            aDialog.dismiss();

                            //删除文件
                            List<File> files = FileUtil.getListFiles(path.getText().toString().trim());
                            for (File file:files){//得到选择目录下所以文件夹的名称
                                if (file.getName().equals(RequestCode.APPNAME)||file.getName().equals(RequestCode.UPLOAD)||
                                        file.getName().equals(RequestCode.GATHER)||file.getName().equals(RequestCode.TEMP_TASK)||
                                        file.getName().equals(RequestCode.TEMP_GATHER)){
                                    FileUtil.deleteFolder(new File(file.getPath()));
                                }
                            }
                            Intent intent = new Intent(mContext, MainActivity.class);
                            startActivity(intent);
                            ToastUtil.showBottomShort(LoginActivity.this, "登录成功！");
                            finish();
                        }
                    });
                    aDialog.show();
                }else{

                    Intent intent = new Intent(mContext, MainActivity.class);
                    startActivity(intent);
                    if (!preferences.getString("gpsTime","").equals("")){
                        MyApplication.gpsTime = Integer.parseInt(preferences.getString("gpsTime",""));
                    }
                    MyApplication.appRootPath = preferences.getString("path","");
                    ToastUtil.showBottomShort(LoginActivity.this, "登录成功！");
                    finish();
                }

            } else {
                ToastUtil.showBottomShort(this, "用户名或密码错误！");
            }
        }
    }

    /**
     * 验证账号密码
     *
     * @return
     */
    private boolean sub() {
        String userFile =  Environment.getExternalStorageDirectory().toString() + "/";
        persons=FileUtil.readFilePath(userFile,RequestCode.PERSONS);
        if (persons != null && !persons.equals("")) {
            lPerson = ParserUtil.jsonToList(persons, PersonModel.class);
            if (lPerson.size() > 0) {
                for (int i = 0; i < lPerson.size(); i++) {
                    String psw = MyApplication.MD5(mima.getText().toString().trim());
                    if (zhanghao.getText().toString().trim().equals(lPerson.get(i).getUsername()) && psw.equals(lPerson.get(i).getPassword())) {
                        isSub = true;
//                        MyApplication.uuid = lPerson.get(i).getUuid();
                        MyApplication.userName = lPerson.get(i).getUsername();
                    }
                }
                return isSub;
            }
        }else{
            DialogUtil.customSystemDialog(LoginActivity.this, false, "提示", "请先将账号信息文件放置在手机根目录下再运行程序", "确定", "", new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    System.exit(0);
                }
            });
            return false;
        }
        return false;
    }

    @Override
    protected Dialog onCreateDialog(int id) {
        if(id==openfileDialogId){
            Map<String, Integer> images = new HashMap<String, Integer>();
            // 下面几句设置各文件类型的图标， 需要你先把图标添加到资源文件夹
            images.put(OpenFileDialog.sRoot, R.drawable.filedialog_root);	// 根目录图标
            images.put(OpenFileDialog.sParent, R.drawable.filedialog_folder_up);	//返回上一层的图标
            images.put(OpenFileDialog.sFolder, R.drawable.filedialog_folder);	//文件夹图标
            images.put("wav", R.drawable.filedialog_wavfile);	//wav文件图标
            images.put(OpenFileDialog.sEmpty, R.drawable.filedialog_root);
            Dialog dialog = openFileDialog.createDialog(id, this, "选择存储路径", new CallbackBundle() {
                        @Override
                        public void callback(Bundle bundle) {
                            String filepath = bundle.getString("path");
//                            setTitle(filepath); // 把文件路径显示在标题上
                            path.setText(filepath);
                        }
                    },
                    ".wav;",
                    images);
            return dialog;
        }
        return null;
    }

    /**
     *	退出activity
     */
    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK && event.getAction() == KeyEvent.ACTION_DOWN) {
            //退出所有的activity
            Intent intent = new Intent();
            intent.setAction(BaseActivity.TAG_ESC_ACTIVITY);
            sendBroadcast(intent);
            finish();
            return true;
        }
        return super.onKeyDown(keyCode, event);
    }

    /**
     * 检查密码
     * @return
     */
    private boolean checkPsw(){
        String psw = preferences.getString("pwd","");
        String userName = preferences.getString("username","");
        Log.e("result",preferences.getString("pwd",""));
        if (zhanghao.getText().toString().trim().equals(userName)){
            if(mima.getText().toString().equals(psw)){
//                MyApplication.uuid = "adsdsdsdsd";
                MyApplication.userName = userName;
                MyApplication.psw = psw;
                return true;
            }
        }
        return false;
    }

}
